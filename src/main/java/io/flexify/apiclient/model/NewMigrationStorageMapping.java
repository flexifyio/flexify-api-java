/*
 * Flexify.IO User REST API
 * + Generate access token via `/rest/auth` + Authorize in Swagger UI using `Bearer TOKEN` + Enjoy Flexify.IO REST API
 *
 * OpenAPI spec version: 2.5.0-SNAPSHOT
 * Contact: info@flexify.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.flexify.apiclient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Mapping between source and destination storages (buckets)
 */
@ApiModel(description = "Mapping between source and destination storages (buckets)")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-18T14:37:49.273+03:00")
public class NewMigrationStorageMapping {
  @JsonProperty("destinationId")
  private Long destinationId = null;

  @JsonProperty("destinationStorageAccountId")
  private Long destinationStorageAccountId = null;

  @JsonProperty("sourceId")
  private Long sourceId = null;

  public NewMigrationStorageMapping destinationId(Long destinationId) {
    this.destinationId = destinationId;
    return this;
  }

   /**
   * Link to destination storage. Keep unset to create bucket with the same name in destination account
   * @return destinationId
  **/
  @ApiModelProperty(value = "Link to destination storage. Keep unset to create bucket with the same name in destination account")
  public Long getDestinationId() {
    return destinationId;
  }

  public void setDestinationId(Long destinationId) {
    this.destinationId = destinationId;
  }

  public NewMigrationStorageMapping destinationStorageAccountId(Long destinationStorageAccountId) {
    this.destinationStorageAccountId = destinationStorageAccountId;
    return this;
  }

   /**
   * Link to destination storage account.Uses to create new bucket if destinationId is unset.Do nothing if destinationId presents
   * @return destinationStorageAccountId
  **/
  @ApiModelProperty(value = "Link to destination storage account.Uses to create new bucket if destinationId is unset.Do nothing if destinationId presents")
  public Long getDestinationStorageAccountId() {
    return destinationStorageAccountId;
  }

  public void setDestinationStorageAccountId(Long destinationStorageAccountId) {
    this.destinationStorageAccountId = destinationStorageAccountId;
  }

  public NewMigrationStorageMapping sourceId(Long sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Link to source storage
   * @return sourceId
  **/
  @ApiModelProperty(required = true, value = "Link to source storage")
  public Long getSourceId() {
    return sourceId;
  }

  public void setSourceId(Long sourceId) {
    this.sourceId = sourceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewMigrationStorageMapping newMigrationStorageMapping = (NewMigrationStorageMapping) o;
    return Objects.equals(this.destinationId, newMigrationStorageMapping.destinationId) &&
        Objects.equals(this.destinationStorageAccountId, newMigrationStorageMapping.destinationStorageAccountId) &&
        Objects.equals(this.sourceId, newMigrationStorageMapping.sourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationId, destinationStorageAccountId, sourceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewMigrationStorageMapping {\n");
    
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    destinationStorageAccountId: ").append(toIndentedString(destinationStorageAccountId)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

