/*
 * Flexify.IO User REST API
 * + Generate access token via `/rest/auth` + Authorize in Swagger UI using `Bearer TOKEN` + Enjoy Flexify.IO REST API
 *
 * OpenAPI spec version: 2.8.5
 * Contact: info@flexify.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.flexify.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.flexify.apiclient.model.Money;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * PaymentAddRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-10-14T13:08:44.282+08:00")
public class PaymentAddRequest {
  @JsonProperty("amount")
  private Money amount = null;

  @JsonProperty("comments")
  private String comments = null;

  /**
   * Payment entry mode (automatic or manual)
   */
  public enum EntryModeEnum {
    MANUAL("MANUAL"),
    
    AUTOMATIC("AUTOMATIC");

    private String value;

    EntryModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EntryModeEnum fromValue(String text) {
      for (EntryModeEnum b : EntryModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("entryMode")
  private EntryModeEnum entryMode = null;

  @JsonProperty("hash")
  private String hash = null;

  /**
   * Payment method
   */
  public enum MethodEnum {
    CASH("CASH"),
    
    WIRE_TRANSFER("WIRE_TRANSFER"),
    
    PAYMENT_GATEWAY("PAYMENT_GATEWAY"),
    
    DISTRIBUTOR("DISTRIBUTOR"),
    
    ADJUSTMENT("ADJUSTMENT");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MethodEnum fromValue(String text) {
      for (MethodEnum b : MethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("method")
  private MethodEnum method = null;

  @JsonProperty("paymentDate")
  private DateTime paymentDate = null;

  @JsonProperty("paymentDetails")
  private String paymentDetails = null;

  public PaymentAddRequest amount(Money amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Payment amount
   * @return amount
  **/
  @ApiModelProperty(value = "Payment amount")
  public Money getAmount() {
    return amount;
  }

  public void setAmount(Money amount) {
    this.amount = amount;
  }

  public PaymentAddRequest comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Payment comments (will be shown to the customer)
   * @return comments
  **/
  @ApiModelProperty(value = "Payment comments (will be shown to the customer)")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public PaymentAddRequest entryMode(EntryModeEnum entryMode) {
    this.entryMode = entryMode;
    return this;
  }

   /**
   * Payment entry mode (automatic or manual)
   * @return entryMode
  **/
  @ApiModelProperty(value = "Payment entry mode (automatic or manual)")
  public EntryModeEnum getEntryMode() {
    return entryMode;
  }

  public void setEntryMode(EntryModeEnum entryMode) {
    this.entryMode = entryMode;
  }

  public PaymentAddRequest hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Unique hash of the payment operation. Should be handled by the client side
   * @return hash
  **/
  @ApiModelProperty(example = "2eba85c6e93d45316065334acd81dd81", value = "Unique hash of the payment operation. Should be handled by the client side")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public PaymentAddRequest method(MethodEnum method) {
    this.method = method;
    return this;
  }

   /**
   * Payment method
   * @return method
  **/
  @ApiModelProperty(value = "Payment method")
  public MethodEnum getMethod() {
    return method;
  }

  public void setMethod(MethodEnum method) {
    this.method = method;
  }

  public PaymentAddRequest paymentDate(DateTime paymentDate) {
    this.paymentDate = paymentDate;
    return this;
  }

   /**
   * Payment date
   * @return paymentDate
  **/
  @ApiModelProperty(value = "Payment date")
  public DateTime getPaymentDate() {
    return paymentDate;
  }

  public void setPaymentDate(DateTime paymentDate) {
    this.paymentDate = paymentDate;
  }

  public PaymentAddRequest paymentDetails(String paymentDetails) {
    this.paymentDetails = paymentDetails;
    return this;
  }

   /**
   * Payment details (such as confirmation number)
   * @return paymentDetails
  **/
  @ApiModelProperty(value = "Payment details (such as confirmation number)")
  public String getPaymentDetails() {
    return paymentDetails;
  }

  public void setPaymentDetails(String paymentDetails) {
    this.paymentDetails = paymentDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentAddRequest paymentAddRequest = (PaymentAddRequest) o;
    return Objects.equals(this.amount, paymentAddRequest.amount) &&
        Objects.equals(this.comments, paymentAddRequest.comments) &&
        Objects.equals(this.entryMode, paymentAddRequest.entryMode) &&
        Objects.equals(this.hash, paymentAddRequest.hash) &&
        Objects.equals(this.method, paymentAddRequest.method) &&
        Objects.equals(this.paymentDate, paymentAddRequest.paymentDate) &&
        Objects.equals(this.paymentDetails, paymentAddRequest.paymentDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, comments, entryMode, hash, method, paymentDate, paymentDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentAddRequest {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    entryMode: ").append(toIndentedString(entryMode)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    paymentDate: ").append(toIndentedString(paymentDate)).append("\n");
    sb.append("    paymentDetails: ").append(toIndentedString(paymentDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

