/*
 * Flexify.IO User REST API
 * + Generate access token via `/rest/auth` + Authorize in Swagger UI using `Bearer TOKEN` + Enjoy Flexify.IO REST API
 *
 * OpenAPI spec version: 2.7-SNAPSHOT
 * Contact: info@flexify.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.flexify.apiclient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Mapping between source and destination buckets or containers
 */
@ApiModel(description = "Mapping between source and destination buckets or containers")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-19T00:30:02.233+08:00")
public class AddMigrationRequestMapping {
  @JsonProperty("destBucketName")
  private String destBucketName = null;

  @JsonProperty("destBucketNewRegion")
  private String destBucketNewRegion = null;

  @JsonProperty("destStorageAccountId")
  private Long destStorageAccountId = null;

  @JsonProperty("sourceBucketName")
  private String sourceBucketName = null;

  @JsonProperty("sourceStorageAccountId")
  private Long sourceStorageAccountId = null;

  public AddMigrationRequestMapping destBucketName(String destBucketName) {
    this.destBucketName = destBucketName;
    return this;
  }

   /**
   * Name of source destionation or container
   * @return destBucketName
  **/
  @ApiModelProperty(required = true, value = "Name of source destionation or container")
  public String getDestBucketName() {
    return destBucketName;
  }

  public void setDestBucketName(String destBucketName) {
    this.destBucketName = destBucketName;
  }

  public AddMigrationRequestMapping destBucketNewRegion(String destBucketNewRegion) {
    this.destBucketNewRegion = destBucketNewRegion;
    return this;
  }

   /**
   * Region where the destination bucket will be created if it does not exist
   * @return destBucketNewRegion
  **/
  @ApiModelProperty(value = "Region where the destination bucket will be created if it does not exist")
  public String getDestBucketNewRegion() {
    return destBucketNewRegion;
  }

  public void setDestBucketNewRegion(String destBucketNewRegion) {
    this.destBucketNewRegion = destBucketNewRegion;
  }

  public AddMigrationRequestMapping destStorageAccountId(Long destStorageAccountId) {
    this.destStorageAccountId = destStorageAccountId;
    return this;
  }

   /**
   * ID of source destination account
   * @return destStorageAccountId
  **/
  @ApiModelProperty(required = true, value = "ID of source destination account")
  public Long getDestStorageAccountId() {
    return destStorageAccountId;
  }

  public void setDestStorageAccountId(Long destStorageAccountId) {
    this.destStorageAccountId = destStorageAccountId;
  }

  public AddMigrationRequestMapping sourceBucketName(String sourceBucketName) {
    this.sourceBucketName = sourceBucketName;
    return this;
  }

   /**
   * Name of source bucket or container
   * @return sourceBucketName
  **/
  @ApiModelProperty(required = true, value = "Name of source bucket or container")
  public String getSourceBucketName() {
    return sourceBucketName;
  }

  public void setSourceBucketName(String sourceBucketName) {
    this.sourceBucketName = sourceBucketName;
  }

  public AddMigrationRequestMapping sourceStorageAccountId(Long sourceStorageAccountId) {
    this.sourceStorageAccountId = sourceStorageAccountId;
    return this;
  }

   /**
   * ID of source storage account
   * @return sourceStorageAccountId
  **/
  @ApiModelProperty(required = true, value = "ID of source storage account")
  public Long getSourceStorageAccountId() {
    return sourceStorageAccountId;
  }

  public void setSourceStorageAccountId(Long sourceStorageAccountId) {
    this.sourceStorageAccountId = sourceStorageAccountId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddMigrationRequestMapping addMigrationRequestMapping = (AddMigrationRequestMapping) o;
    return Objects.equals(this.destBucketName, addMigrationRequestMapping.destBucketName) &&
        Objects.equals(this.destBucketNewRegion, addMigrationRequestMapping.destBucketNewRegion) &&
        Objects.equals(this.destStorageAccountId, addMigrationRequestMapping.destStorageAccountId) &&
        Objects.equals(this.sourceBucketName, addMigrationRequestMapping.sourceBucketName) &&
        Objects.equals(this.sourceStorageAccountId, addMigrationRequestMapping.sourceStorageAccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destBucketName, destBucketNewRegion, destStorageAccountId, sourceBucketName, sourceStorageAccountId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddMigrationRequestMapping {\n");
    
    sb.append("    destBucketName: ").append(toIndentedString(destBucketName)).append("\n");
    sb.append("    destBucketNewRegion: ").append(toIndentedString(destBucketNewRegion)).append("\n");
    sb.append("    destStorageAccountId: ").append(toIndentedString(destStorageAccountId)).append("\n");
    sb.append("    sourceBucketName: ").append(toIndentedString(sourceBucketName)).append("\n");
    sb.append("    sourceStorageAccountId: ").append(toIndentedString(sourceStorageAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

