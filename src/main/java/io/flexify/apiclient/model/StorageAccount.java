/*
 * Flexify.IO User REST API
 * + Generate access token via `/rest/auth` + Authorize in Swagger UI using `Bearer TOKEN` + Enjoy Flexify.IO REST API
 *
 * OpenAPI spec version: 2.4.0
 * Contact: info@flexify.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.flexify.apiclient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.flexify.apiclient.model.DbStorageProvider;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * StorageAccount
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-07T17:03:52.903+03:00")
public class StorageAccount {
  @JsonProperty("anonymous")
  private Boolean anonymous = null;

  @JsonProperty("credential")
  private String credential = null;

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("identity")
  private String identity = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("provider")
  private DbStorageProvider provider = null;

  @JsonProperty("providerId")
  private Long providerId = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("useSsl")
  private Boolean useSsl = null;

  public StorageAccount anonymous(Boolean anonymous) {
    this.anonymous = anonymous;
    return this;
  }

   /**
   * True for public account
   * @return anonymous
  **/
  @ApiModelProperty(example = "false", value = "True for public account")
  public Boolean isAnonymous() {
    return anonymous;
  }

  public void setAnonymous(Boolean anonymous) {
    this.anonymous = anonymous;
  }

  public StorageAccount credential(String credential) {
    this.credential = credential;
    return this;
  }

   /**
   * Credential of the cloud account
   * @return credential
  **/
  @ApiModelProperty(value = "Credential of the cloud account")
  public String getCredential() {
    return credential;
  }

  public void setCredential(String credential) {
    this.credential = credential;
  }

   /**
   * Id of the storage account
   * @return id
  **/
  @ApiModelProperty(value = "Id of the storage account")
  public Long getId() {
    return id;
  }

  public StorageAccount identity(String identity) {
    this.identity = identity;
    return this;
  }

   /**
   * Identity of the cloud account
   * @return identity
  **/
  @ApiModelProperty(value = "Identity of the cloud account")
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }

  public StorageAccount name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Storage account name
   * @return name
  **/
  @ApiModelProperty(value = "Storage account name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public StorageAccount provider(DbStorageProvider provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Link to the storage provider (Amazon, Azure, etc)
   * @return provider
  **/
  @ApiModelProperty(value = "Link to the storage provider (Amazon, Azure, etc)")
  public DbStorageProvider getProvider() {
    return provider;
  }

  public void setProvider(DbStorageProvider provider) {
    this.provider = provider;
  }

  public StorageAccount providerId(Long providerId) {
    this.providerId = providerId;
    return this;
  }

   /**
   * Get providerId
   * @return providerId
  **/
  @ApiModelProperty(value = "")
  public Long getProviderId() {
    return providerId;
  }

  public void setProviderId(Long providerId) {
    this.providerId = providerId;
  }

  public StorageAccount url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL to the cloud
   * @return url
  **/
  @ApiModelProperty(example = "https://s3.amazonaws.com", value = "URL to the cloud")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public StorageAccount useSsl(Boolean useSsl) {
    this.useSsl = useSsl;
    return this;
  }

   /**
   * Encrypt transfer with SSL
   * @return useSsl
  **/
  @ApiModelProperty(example = "true", value = "Encrypt transfer with SSL")
  public Boolean isUseSsl() {
    return useSsl;
  }

  public void setUseSsl(Boolean useSsl) {
    this.useSsl = useSsl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageAccount storageAccount = (StorageAccount) o;
    return Objects.equals(this.anonymous, storageAccount.anonymous) &&
        Objects.equals(this.credential, storageAccount.credential) &&
        Objects.equals(this.id, storageAccount.id) &&
        Objects.equals(this.identity, storageAccount.identity) &&
        Objects.equals(this.name, storageAccount.name) &&
        Objects.equals(this.provider, storageAccount.provider) &&
        Objects.equals(this.providerId, storageAccount.providerId) &&
        Objects.equals(this.url, storageAccount.url) &&
        Objects.equals(this.useSsl, storageAccount.useSsl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anonymous, credential, id, identity, name, provider, providerId, url, useSsl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageAccount {\n");
    
    sb.append("    anonymous: ").append(toIndentedString(anonymous)).append("\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    useSsl: ").append(toIndentedString(useSsl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

