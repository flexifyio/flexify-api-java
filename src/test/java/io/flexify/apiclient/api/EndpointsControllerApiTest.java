/*
 * Flexify.IO User REST API
 * + Generate access token via `/rest/auth` + Authorize in Swagger UI using `Bearer TOKEN` + Enjoy Flexify.IO REST API
 *
 * OpenAPI spec version: 2.4.0
 * Contact: info@flexify.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.flexify.apiclient.api;

import io.flexify.apiclient.handler.ApiException;
import io.flexify.apiclient.model.Endpoint;
import io.flexify.apiclient.model.EndpointDetails;
import io.flexify.apiclient.model.EndpointStorage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EndpointsControllerApi
 */
@Ignore
public class EndpointsControllerApiTest {

    private final EndpointsControllerApi api = new EndpointsControllerApi();

    
    /**
     * Attach the storage to the endpoint
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attachStorageToEndpointUsingPOSTTest() throws ApiException {
        Long endpointId = null;
        EndpointStorage endpointStorage = null;
        api.attachStorageToEndpointUsingPOST(endpointId, endpointStorage);

        // TODO: test validations
    }
    
    /**
     * Detach the storage from the endpoint
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detachStorageFromEndpointUsingDELETETest() throws ApiException {
        Long endpointId = null;
        Long storageId = null;
        api.detachStorageFromEndpointUsingDELETE(endpointId, storageId);

        // TODO: test validations
    }
    
    /**
     * Disable the endpoint
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void disableUsingPUTTest() throws ApiException {
        Long endpointId = null;
        api.disableUsingPUT(endpointId);

        // TODO: test validations
    }
    
    /**
     * Enable the endpoint
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void enableUsingPUTTest() throws ApiException {
        Long endpointId = null;
        api.enableUsingPUT(endpointId);

        // TODO: test validations
    }
    
    /**
     * Get endpoint details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEndpointDetailsUsingGETTest() throws ApiException {
        Long endpointId = null;
        EndpointDetails response = api.getEndpointDetailsUsingGET(endpointId);

        // TODO: test validations
    }
    
    /**
     * Get endpoint for current user. This method will create new endpoint if no endpoints exist for user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEndpointsForCurrentUserUsingGETTest() throws ApiException {
        List<EndpointDetails> response = api.getEndpointsForCurrentUserUsingGET();

        // TODO: test validations
    }
    
    /**
     * Set given storage as default for the endpoint
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setDefaultStorageUsingPUTTest() throws ApiException {
        Long endpointId = null;
        Long storageId = null;
        api.setDefaultStorageUsingPUT(endpointId, storageId);

        // TODO: test validations
    }
    
    /**
     * Update attributes of the endpoint
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateEndpointUsingPUTTest() throws ApiException {
        Long endpointId = null;
        Endpoint endpoint = null;
        api.updateEndpointUsingPUT(endpointId, endpoint);

        // TODO: test validations
    }
    
}
