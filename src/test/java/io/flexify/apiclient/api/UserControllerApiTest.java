/*
 * Flexify.IO User REST API
 * + Generate access token via `/rest/auth` + Authorize in Swagger UI using `Bearer TOKEN` + Enjoy Flexify.IO REST API
 *
 * OpenAPI spec version: 2.4.0-SNAPSHOT
 * Contact: info@flexify.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.flexify.apiclient.api;

import io.flexify.apiclient.handler.ApiException;
import io.flexify.apiclient.model.ChangePasswordRequest;
import io.flexify.apiclient.model.DbUserProfile;
import io.flexify.apiclient.model.RequestResetPasswordReqeust;
import io.flexify.apiclient.model.ResetPasswordRequest;
import io.flexify.apiclient.model.SignUpRequest;
import io.flexify.apiclient.model.SignupResult;
import io.flexify.apiclient.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserControllerApi
 */
@Ignore
public class UserControllerApiTest {

    private final UserControllerApi api = new UserControllerApi();

    
    /**
     * changeCurrentUserPassword
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeCurrentUserPasswordUsingPOSTTest() throws ApiException {
        ChangePasswordRequest request = null;
        api.changeCurrentUserPasswordUsingPOST(request);

        // TODO: test validations
    }
    
    /**
     * getCurrentUser
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCurrentUserUsingGETTest() throws ApiException {
        Boolean silence = null;
        User response = api.getCurrentUserUsingGET(silence);

        // TODO: test validations
    }
    
    /**
     * requestResetPassword
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void requestResetPasswordUsingPOSTTest() throws ApiException {
        RequestResetPasswordReqeust reqeust = null;
        api.requestResetPasswordUsingPOST(reqeust);

        // TODO: test validations
    }
    
    /**
     * resetPassword
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetPasswordUsingPOSTTest() throws ApiException {
        ResetPasswordRequest request = null;
        User response = api.resetPasswordUsingPOST(request);

        // TODO: test validations
    }
    
    /**
     * signup
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void signupUsingPOSTTest() throws ApiException {
        SignUpRequest body = null;
        SignupResult response = api.signupUsingPOST(body);

        // TODO: test validations
    }
    
    /**
     * updateCurrentUserProfile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCurrentUserProfileUsingPUTTest() throws ApiException {
        DbUserProfile newProfile = null;
        User response = api.updateCurrentUserProfileUsingPUT(newProfile);

        // TODO: test validations
    }
    
    /**
     * validateToken
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateTokenUsingGETTest() throws ApiException {
        String token = null;
        User response = api.validateTokenUsingGET(token);

        // TODO: test validations
    }
    
}
